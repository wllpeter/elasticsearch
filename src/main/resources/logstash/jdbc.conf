input {
    stdin {
    }
    jdbc {
        # mysql 数据库链接,es为数据库名
        jdbc_connection_string => "jdbc:mysql://localhost:3306/my_database?useUnicode=true&characterEncoding=utf-8&useSSL=false"
        # 用户名和密码
        jdbc_user => "root"  
        jdbc_password => "root"
        # 驱动 
        jdbc_driver_library => 
        "D:/mvn_repository/mysql/mysql-connector-java/5.1.46/mysql-connector-java-5.1.46.jar"
        # 驱动类名 
        jdbc_driver_class => "com.mysql.jdbc.Driver"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "50000"
        #注意
		#1.这里不要少了唯一标识id，或者其他主键字段
		#2.把含有'type'的字段as为其他名字，否则会覆盖logstash的type
		#3.注意数据库的时区是否相同
		statement => "SELECT id,username,`password`,age,ip, `created` FROM user_es 	where `created` > :sql_last_value"
        # 设置监听间隔  各字段含义（由左至右）分、时、天、月、年，全部为*默认含义为每分钟都更新 
        schedule => "* * * * *"
		clean_run => false
		use_column_value => true
		tracking_column => "created"
		tracking_column_type => timestamp
		record_last_run => true
		last_run_metadata_path => "D:/es/logstash/logstash-5.5.3/run/user_last_run.txt"
        # 设定ES索引类型
        type => "user"
    }
}
filter {  
    json {  
            source => "message"  
            remove_field => ["message"]  
    }  
} 
output {
    elasticsearch { 
        hosts => ["127.0.0.1:9200"]
        #ES索引名称（自己定义的）
        index => "my_user"
        #自增ID编号
        document_id => "%{id}"
    }
    stdout {
        codec => json_lines
    }
}